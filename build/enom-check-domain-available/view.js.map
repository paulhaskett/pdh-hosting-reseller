{"version":3,"file":"enom-check-domain-available/view.js","mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;AACxB,IAAI,OAAOC,YAAY,KAAK,WAAW,EAAE;EACxCF,OAAO,CAACG,KAAK,CAAC,+BAA+B,CAAC;AAE/C;AACAH,OAAO,CAACC,GAAG,CAACC,YAAY,CAACE,KAAK,CAAC;AAC/BJ,OAAO,CAACC,GAAG,CAACC,YAAY,CAACG,OAAO,CAAC;AACjCL,OAAO,CAACC,GAAG,CAACC,YAAY,CAACI,IAAI,CAAC;;AAE9B;AACAC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EACnDD,QAAQ,CAACE,gBAAgB,CAAC,qBAAqB,CAAC,CAACC,OAAO,CAACC,IAAI,IAAI;IAChE,MAAMC,SAAS,GAAGD,IAAI,CAACE,aAAa,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM;MACvE,MAAMC,GAAG,GAAGP,QAAQ,CAACQ,aAAa,CAAC,KAAK,CAAC;MACzCD,GAAG,CAACE,SAAS,GAAG,sBAAsB;MACtCL,IAAI,CAACM,WAAW,CAACH,GAAG,CAAC;MACrB,OAAOA,GAAG;IACX,CAAC,EAAE,CAAC;IAEJH,IAAI,CAACH,gBAAgB,CAAC,QAAQ,EAAE,MAAOU,CAAC,IAAK;MAC5CA,CAAC,CAACC,cAAc,CAAC,CAAC;MAClB,MAAMC,WAAW,GAAGT,IAAI,CAACE,aAAa,CAAC,sBAAsB,CAAC;MAC9D,MAAMQ,SAAS,GAAGV,IAAI,CAACE,aAAa,CAAC,oBAAoB,CAAC;MAC1D,MAAMS,MAAM,GAAGF,WAAW,CAACG,KAAK,CAACC,IAAI,CAAC,CAAC;MACvC,MAAMC,GAAG,GAAGJ,SAAS,CAACE,KAAK;MAE3B,IAAI,CAACD,MAAM,EAAE;MAEbV,SAAS,CAACc,WAAW,GAAG,WAAW;MAEnC,IAAI;QACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;UACjEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACR,cAAc,EAAE,kBAAkB;YAClC,YAAY,EAAE5B,YAAY,CAACE;UAC5B,CAAC;UACD2B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEX,MAAM;YAAEG;UAAI,CAAC;QACrC,CAAC,CAAC;QACF,MAAMS,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClC,MAAMC,MAAM,GAAGF,IAAI,CAAC,oBAAoB,CAAC;QAEzC,IAAIE,MAAM,CAACC,OAAO,KAAK,sBAAsB,EAAE;UAC9CC,SAAS,GAAG,KAAK;QAClB,CAAC,MAAM;UACNA,SAAS,GAAG,IAAI;QACjB;QACAtC,OAAO,CAACC,GAAG,CAACmC,MAAM,CAACC,OAAO,CAAC;QAC3BrC,OAAO,CAACC,GAAG,CAACqC,SAAS,CAAC;QACtB1B,SAAS,CAACc,WAAW,GAAGY,SAAS,GAC9B,YAAYhB,MAAM,IAAIG,GAAG,gBAAgB,GACzC,YAAYH,MAAM,IAAIG,GAAG,YAAY;MAEzC,CAAC,CAAC,OAAOc,GAAG,EAAE;QACb3B,SAAS,CAACc,WAAW,GAAG,wBAAwB;MACjD;IACD,CAAC,CAAC;EACH,CAAC,CAAC;AACH,CAAC,CAAC;;AAIF,8B","sources":["webpack://pdh-hosting-reseller/./src/enom-check-domain-available/view.js"],"sourcesContent":["/**\n * Use this file for JavaScript code that you want to run in the front-end\n * on posts/pages that contain this block.\n *\n * When this file is defined as the value of the `viewScript` property\n * in `block.json` it will be enqueued on the front end of the site.\n *\n * Example:\n *\n * ```js\n * {\n *   \"viewScript\": \"file:./view.js\"\n * }\n * ```\n *\n * If you're not making any changes to this file because your project doesn't need any\n * JavaScript running in the front-end, then you should delete this file and remove\n * the `viewScript` property from `block.json`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-metadata/#view-script\n */\nconsole.log(\"this ran \")\nif (typeof DomainWidget === 'undefined') {\n\tconsole.error('DomainWidget object not found')\n\n}\nconsole.log(DomainWidget.token)\nconsole.log(DomainWidget.restUrl)\nconsole.log(DomainWidget.name)\n\n/* eslint-disable no-console */\ndocument.addEventListener('DOMContentLoaded', () => {\n\tdocument.querySelectorAll('.domain-search-form').forEach(form => {\n\t\tconst resultDiv = form.querySelector('.domain-search-result') || (() => {\n\t\t\tconst div = document.createElement('div')\n\t\t\tdiv.className = 'domain-search-result'\n\t\t\tform.appendChild(div)\n\t\t\treturn div\n\t\t})()\n\n\t\tform.addEventListener('submit', async (e) => {\n\t\t\te.preventDefault()\n\t\t\tconst domainInput = form.querySelector('input[name=\"domain\"]')\n\t\t\tconst tldSelect = form.querySelector('select[name=\"tld\"]')\n\t\t\tconst domain = domainInput.value.trim()\n\t\t\tconst tld = tldSelect.value\n\n\t\t\tif (!domain) return\n\n\t\t\tresultDiv.textContent = 'Checking…'\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetch('/wp-json/pdh-enom/v2/check-domain', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t'X-WP-Nonce': DomainWidget.token\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({ domain, tld })\n\t\t\t\t})\n\t\t\t\tconst data = await response.json()\n\t\t\t\tconst result = data['interface-response']\n\n\t\t\t\tif (result.RRPText === 'Domain not available') {\n\t\t\t\t\tavailable = false\n\t\t\t\t} else {\n\t\t\t\t\tavailable = true\n\t\t\t\t}\n\t\t\t\tconsole.log(result.RRPText)\n\t\t\t\tconsole.log(available)\n\t\t\t\tresultDiv.textContent = available\n\t\t\t\t\t? `✅ Domain ${domain}.${tld} is available!`\n\t\t\t\t\t: `❌ Domain ${domain}.${tld} is taken.`\n\n\t\t\t} catch (err) {\n\t\t\t\tresultDiv.textContent = 'Error checking domain.'\n\t\t\t}\n\t\t})\n\t})\n})\n\n\n\n/* eslint-enable no-console */\n"],"names":["console","log","DomainWidget","error","token","restUrl","name","document","addEventListener","querySelectorAll","forEach","form","resultDiv","querySelector","div","createElement","className","appendChild","e","preventDefault","domainInput","tldSelect","domain","value","trim","tld","textContent","response","fetch","method","headers","body","JSON","stringify","data","json","result","RRPText","available","err"],"sourceRoot":""}